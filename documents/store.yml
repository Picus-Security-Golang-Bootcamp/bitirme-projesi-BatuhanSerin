swagger: "2.0"
info:
  description: "This is a Store server.  "
  version: "1.0.0"
  title: "Swagger Store"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "batuhanserin97@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/api/v1/store-api"
tags:
  - name: "category"
    description: "Everything about Categories"
  - name: "product"
    description: "Everything about Products"

schemes:
  - "https"
  - "http"
paths:
  /categories:
    post:
      tags:
        - "category"
      summary: "Add a new category to the store"
      description: ""
      operationId: "addCategory"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Category object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Category"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Category"
        "405":
          description: "Invalid input"
  /user:
    post:
      tags:
        - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
  /user/login:
    get:
      tags:
        - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Category object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Login"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"
  /user/logout:
    get:
      tags:
        - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters: [ ]
      responses:
        default:
          description: "successful operation"

securityDefinitions:
  store_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:products: "modify products in your account"
      read:products: "read your products"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"


definitions:
  Category:
    type: "object"
    required:
      - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      products:
        type: "array"
        items:
          $ref: "#/definitions/Product"  
  Product:
    type: "object"
    required:
      - "name"
      - "stock"
      - "price"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        type: "object"
        $ref: "#/definitions/CategoryWithoutRequired"
      name:
        type: "string"
      stock:
        type: "integer"
        format: "int64"
      price:
        type: "number"
        format: "float64"
  CategoryWithoutRequired:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      isAdmin:
        type: "boolean"
  Login:
    type: "object"
    required:
      - email
      - password
    properties:
      email:
        type: "string"
      password:
        type: "string"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
      message:
        type: "string"
      details:
        description: a (key, value) map.
        type: object

